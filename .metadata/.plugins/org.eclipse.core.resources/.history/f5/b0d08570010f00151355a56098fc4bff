package com.sizemore.codility;

import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;

public class Sulphur implements Problem {
	
    public Set<Integer> leaves = new HashSet<Integer>();
    public List<Node> nodes = new ArrayList<Node>();

	public int sulphur(int[] strengths, int[] weights, int[] parents) {

        for (int i = 0; i < strengths.length; i++) {
        	
        }
        
        return 0;
    }
   
    class Node {
       
        public List<Node> children = new ArrayList<Node>();
        public boolean isLeaf = true;
       
        private int instructionNumber;
        private int strength;
        private int weight;
        private Node parent;
       
        public Node(int strength, int weight, int parent, int instructionNumber) {
            this.strength = strength;
            this.weight = weight;
            if (parent != -1) {
            	this.parent = nodes.get(parent);
            	this.parent.isLeaf = false;
                this.parent.children.add(this);
                leaves.remove(parent);
            }
            this.instructionNumber = instructionNumber;
        }
        
        public Node() {}
    }

	public void execute() {

		int[] A = { 5, 3, 6, 3, 3};
		int[] B = { 2, 3, 1, 1, 2 };
		int[] C = { -1, 0, -1, 0, 3 };
		System.out.println(sulphur(A, B, C));
	}
}
